import logging
import asyncpg
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message
from aiogram.utils import executor

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
TOKEN = "7867162876:AAGikAKxu1HIVXwQC8RfqRib2MPlDsrTk6c"
DATABASE_URL = "postgresql://postgres:***@postgres.railway.internal:5432/railway"

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

logging.basicConfig(level=logging.INFO)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
@dp.message_handler(commands=['test_db'])
async def test_db(message: Message):
    try:
        conn = await asyncpg.connect(DATABASE_URL)
        await conn.execute("SELECT 1")
        await conn.close()
        await message.answer("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç! üéâ")
    except Exception as e:
        await message.answer(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {e}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã —Å—Ç–∞—Ä—Ç
@dp.message_handler(commands=['start'])
async def start(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç. –û—Ç–ø—Ä–∞–≤—å /test_db –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ë–î.")

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
