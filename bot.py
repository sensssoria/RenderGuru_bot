import os
import asyncio
import asyncpg
import openai
from aiogram import Bot, Dispatcher
from aiogram.types import Message
from aiogram.filters import Command

# ‚úÖ –ó–∞–≥—Ä—É–∂–∞–µ–º API-–∫–ª—é—á–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv("API_TOKEN")  # –¢–æ–∫–µ–Ω Telegram-–±–æ—Ç–∞
DATABASE_URL = os.getenv("DATABASE_URL")  # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")  # API-–∫–ª—é—á OpenAI

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∑–∞–¥–∞–Ω—ã
if not TOKEN or not DATABASE_URL or not OPENAI_API_KEY:
    raise ValueError("‚ùå –û—à–∏–±–∫–∞: –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ API_TOKEN, DATABASE_URL –∏–ª–∏ OPENAI_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!")

# ‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞
bot = Bot(token=TOKEN)
dp = Dispatcher()

# ‚úÖ –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ OpenAI
openai.api_key = OPENAI_API_KEY

# ‚úÖ –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç OpenAI
async def get_openai_answer(question: str):
    try:
        response = openai.ChatCompletion.create(
            model="gpt-4o",
            messages=[{"role": "user", "content": question}],
            temperature=0.7
        )
        return response["choices"][0]["message"]["content"]
    except Exception as e:
        return "‚ö† –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ OpenAI."

# ‚úÖ –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(Command("start"))
async def start_cmd(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç RenderGuru. –ó–∞–¥–∞–π –º–Ω–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –ø–æ 3D-–≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏!")

# ‚úÖ –ö–æ–º–∞–Ω–¥–∞ /ask –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤ –∫ OpenAI
@dp.message(Command("ask"))
async def ask_cmd(message: Message):
    user_question = message.text.replace("/ask", "").strip()
    if not user_question:
        await message.answer("‚ùå –í–æ–ø—Ä–æ—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –ò—Å–ø–æ–ª—å–∑—É–π `/ask –¢–≤–æ–π –≤–æ–ø—Ä–æ—Å`.")
        return
    answer = await get_openai_answer(user_question)
    await message.answer(answer)

# ‚úÖ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
